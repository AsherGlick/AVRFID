GAS LISTING /tmp/ccpOlZ1u.s 			page 1


   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.stabs	"/home/elhim/Code/projects/RFID-Reader-Mod/",100,0,2,.Ltext0
   9               		.stabs	"main.c",100,0,2,.Ltext0
  10               		.text
  11               	.Ltext0:
  12               		.stabs	"gcc2_compiled.",60,0,0,0
  13               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,1,0
  14               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,1,0
  15               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,1,0
  16               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,1,0
  17               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,1,0
  18               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,1,
  19               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,1,0
  20               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,1,0
  21               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,1,0
  22               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,1,0
  23               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,1,0
  24               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,1,0
  25               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,1,0
  26               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,1,0
  27               		.stabs	"void:t(0,15)=(0,15)",128,0,1,0
  28               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/avr/io.h",130,0,0,0
  29               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  30               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/inttypes.h",130,0,0,0
  31               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/stdint.h",130,0,0,0
  32               		.stabs	"int8_t:t(4,1)=(0,10)",128,0,121,0
  33               		.stabs	"uint8_t:t(4,2)=(0,11)",128,0,122,0
  34               		.stabs	"int16_t:t(4,3)=(0,1)",128,0,123,0
  35               		.stabs	"uint16_t:t(4,4)=(0,4)",128,0,124,0
  36               		.stabs	"int32_t:t(4,5)=(0,3)",128,0,125,0
  37               		.stabs	"uint32_t:t(4,6)=(0,5)",128,0,126,0
  38               		.stabs	"int64_t:t(4,7)=(0,6)",128,0,128,0
  39               		.stabs	"uint64_t:t(4,8)=(0,7)",128,0,129,0
  40               		.stabs	"intptr_t:t(4,9)=(4,3)",128,0,142,0
  41               		.stabs	"uintptr_t:t(4,10)=(4,4)",128,0,147,0
  42               		.stabs	"int_least8_t:t(4,11)=(4,1)",128,0,159,0
  43               		.stabs	"uint_least8_t:t(4,12)=(4,2)",128,0,164,0
  44               		.stabs	"int_least16_t:t(4,13)=(4,3)",128,0,169,0
  45               		.stabs	"uint_least16_t:t(4,14)=(4,4)",128,0,174,0
  46               		.stabs	"int_least32_t:t(4,15)=(4,5)",128,0,179,0
  47               		.stabs	"uint_least32_t:t(4,16)=(4,6)",128,0,184,0
  48               		.stabs	"int_least64_t:t(4,17)=(4,7)",128,0,192,0
  49               		.stabs	"uint_least64_t:t(4,18)=(4,8)",128,0,199,0
  50               		.stabs	"int_fast8_t:t(4,19)=(4,1)",128,0,213,0
  51               		.stabs	"uint_fast8_t:t(4,20)=(4,2)",128,0,218,0
  52               		.stabs	"int_fast16_t:t(4,21)=(4,3)",128,0,223,0
  53               		.stabs	"uint_fast16_t:t(4,22)=(4,4)",128,0,228,0
  54               		.stabs	"int_fast32_t:t(4,23)=(4,5)",128,0,233,0
  55               		.stabs	"uint_fast32_t:t(4,24)=(4,6)",128,0,238,0
  56               		.stabs	"int_fast64_t:t(4,25)=(4,7)",128,0,246,0
  57               		.stabs	"uint_fast64_t:t(4,26)=(4,8)",128,0,253,0
GAS LISTING /tmp/ccpOlZ1u.s 			page 2


  58               		.stabs	"intmax_t:t(4,27)=(4,7)",128,0,273,0
  59               		.stabs	"uintmax_t:t(4,28)=(4,8)",128,0,278,0
  60               		.stabn	162,0,0,0
  61               		.stabs	"int_farptr_t:t(3,1)=(4,5)",128,0,77,0
  62               		.stabs	"uint_farptr_t:t(3,2)=(4,6)",128,0,81,0
  63               		.stabn	162,0,0,0
  64               		.stabn	162,0,0,0
  65               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/avr/fuse.h",130,0,0,0
  66               		.stabs	"__fuse_t:t(5,1)=(5,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
  67               		.stabn	162,0,0,0
  68               		.stabn	162,0,0,0
  69               		.stabs	"/usr/lib/gcc/avr/4.3.5/../../../avr/include/stdlib.h",130,0,0,0
  70               		.stabs	"/usr/lib/gcc/avr/4.3.5/include/stddef.h",130,0,0,0
  71               		.stabs	"size_t:t(7,1)=(0,4)",128,0,214,0
  72               		.stabs	"wchar_t:t(7,2)=(0,1)",128,0,326,0
  73               		.stabn	162,0,0,0
  74               		.stabs	"div_t:t(6,1)=(6,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
  75               		.stabs	"ldiv_t:t(6,3)=(6,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
  76               		.stabs	"__compar_fn_t:t(6,5)=(6,6)=*(6,7)=f(0,1)",128,0,80,0
  77               		.stabn	162,0,0,0
  78               		.stabs	"__vector_1:F(0,15)",36,0,72,__vector_1
  79               	.global	__vector_1
  80               		.type	__vector_1, @function
  81               	__vector_1:
  82               		.stabd	46,0,0
   1:main.c        **** // /****************************************************************************\
   2:main.c        **** ///         This program was written by Asher Glick aglick@tetrakai.com          \
   3:main.c        **** //\             This program is currently under the GNU GPL licence              /
   4:main.c        **** // \****************************************************************************/
   5:main.c        **** 
   6:main.c        **** /****************** CHIP SETTINGS ******************\
   7:main.c        **** | This program was designed to run on an ATMEGA328  |
   8:main.c        **** | chip running without an external clock at 8MHz    |
   9:main.c        **** \***************************************************/
  10:main.c        **** 
  11:main.c        **** /********** FUSE SETTINGS **********\
  12:main.c        **** |   Low Fuse 0xE2                   |
  13:main.c        **** |  High Fuse 0xD9                   |       +- AVRDUDE COMMANDS -+
  14:main.c        **** | Extra Fuse 0x07                   |       | -U lfuse:w:0xe0:m  |
  15:main.c        **** |                                   |       | -U hfuse:w:0xd9:m  |
  16:main.c        **** | These fuse calculations are       |       | -U efuse:w:0xff:m  |
  17:main.c        **** | based off of the usbtiny AVR      |       +--------------------+
  18:main.c        **** | programmer. Other programmers     |
  19:main.c        **** | may have a different fuse number  |
  20:main.c        **** \***********************************/
  21:main.c        **** 
  22:main.c        **** /************************** AVRDUDE command for 8MHz **************************\ 
  23:main.c        **** | sudo avrdude -p m328p -c usbtiny -U flash:w:myproject.hex                    |
  24:main.c        **** |                       -U lfuse:w:0xE2:m -U hfuse:w:0xD9:m -U efuse:w:0x07:m  |
  25:main.c        **** |                                                                              |
  26:main.c        **** | NOTE: when messing with fuses, do this at your own risk. These fuses for the |
  27:main.c        **** |        ATMEGA328P (ATMEGA328) worked for me, however if they do not work for |
  28:main.c        **** |        you, it is not my fault                                               |
  29:main.c        **** | NOTE: '-c usbtiny' may be incorrect if you are using a different programmer  |
  30:main.c        **** \******************************************************************************/
  31:main.c        **** 
  32:main.c        **** // Custom values
GAS LISTING /tmp/ccpOlZ1u.s 			page 3


  33:main.c        **** // These values may need to be changed depending on the servo that you are using
  34:main.c        **** #define SERVO_OPEN 575    // open signal value for the servo
  35:main.c        **** #define SERVO_CLOSE 1000  // close signal value for the servo
  36:main.c        **** 
  37:main.c        **** #include <avr/io.h>
  38:main.c        **** #include <avr/interrupt.h>
  39:main.c        **** #include <stdlib.h>
  40:main.c        **** 
  41:main.c        **** #define ARRAYSIZE 900   // Raw RFID Data Buffer Size
  42:main.c        **** 
  43:main.c        **** int * begin;            // points to the bigining of the array
  44:main.c        **** int * names;            // array of valid ID numbers
  45:main.c        **** int namesize;           // size of array of valid ID numbers
  46:main.c        **** volatile int iter;      // the iterator for the placement of count in the array
  47:main.c        **** volatile int count;     // counts 125kHz pulses
  48:main.c        **** volatile int lastpulse; // last value of DEMOD_OUT
  49:main.c        **** volatile int on;        // stores the value of DEMOD_OUT in the interrupt
  50:main.c        **** 
  51:main.c        **** /********************************* ADD NAMES *********************************\
  52:main.c        **** | This function add allocates the ammount of memory that will be needed to    |
  53:main.c        **** | store the list of names, and adds all the saved names to the allocated      |
  54:main.c        **** | memory for use later in the program                                         |
  55:main.c        **** \*****************************************************************************/
  56:main.c        **** void addNames(void) {
  57:main.c        ****   namesize = 2; // number of IDs in the access list
  58:main.c        ****   names = malloc (sizeof(int) * namesize);
  59:main.c        ****   // change or add more IDs after this point
  60:main.c        ****   names [0] = 12345;
  61:main.c        ****   names [1] = 67890;
  62:main.c        **** }
  63:main.c        **** 
  64:main.c        **** /******************************* INT0 INTERRUPT *******************************\
  65:main.c        **** | This ISR(INT0_vect) is the interrupt function for INT0. This function is the |
  66:main.c        **** | function that is run each time the 125kHz pulse goes HIGH.                   |
  67:main.c        **** | 1) If this pulse is in a new wave then put the count of the last wave into   |
  68:main.c        **** |     the array                                                                |
  69:main.c        **** | 2) Add one to the count (count stores the number of 125kHz pulses in each    |
  70:main.c        **** |     wave                                                                     |
  71:main.c        **** \******************************************************************************/
  72:main.c        **** ISR(INT0_vect) {
  83               		.stabn	68,0,72,.LM0-.LFBB1
  84               	.LM0:
  85               	.LFBB1:
  86 0000 1F92      		push __zero_reg__
  87 0002 0F92      		push r0
  88 0004 0FB6      		in r0,__SREG__
  89 0006 0F92      		push r0
  90 0008 1124      		clr __zero_reg__
  91 000a 2F93      		push r18
  92 000c 3F93      		push r19
  93 000e 8F93      		push r24
  94 0010 9F93      		push r25
  95 0012 EF93      		push r30
  96 0014 FF93      		push r31
  97               	/* prologue: Signal */
  98               	/* frame size = 0 */
  73:main.c        ****   //Save the value of DEMOD_OUT to prevent re-reading on the same group
GAS LISTING /tmp/ccpOlZ1u.s 			page 4


  74:main.c        ****   on =(PINB & 0x01); 
  99               		.stabn	68,0,74,.LM1-.LFBB1
 100               	.LM1:
 101 0016 83B1      		in r24,35-32
 102 0018 90E0      		ldi r25,lo8(0)
 103 001a 8170      		andi r24,lo8(1)
 104 001c 9070      		andi r25,hi8(1)
 105 001e 9093 0000 		sts (on)+1,r25
 106 0022 8093 0000 		sts on,r24
  75:main.c        ****   // if wave is rising (end of the last wave)
  76:main.c        ****   if (on == 1 && lastpulse == 0 ) {
 107               		.stabn	68,0,76,.LM2-.LFBB1
 108               	.LM2:
 109 0026 8091 0000 		lds r24,on
 110 002a 9091 0000 		lds r25,(on)+1
 111 002e 0197      		sbiw r24,1
 112 0030 01F4      		brne .L2
 113 0032 8091 0000 		lds r24,lastpulse
 114 0036 9091 0000 		lds r25,(lastpulse)+1
 115 003a 892B      		or r24,r25
 116 003c 01F4      		brne .L2
  77:main.c        ****     // write the data to the array and reset the cound
  78:main.c        ****     begin[iter] = count;
 117               		.stabn	68,0,78,.LM3-.LFBB1
 118               	.LM3:
 119 003e 8091 0000 		lds r24,iter
 120 0042 9091 0000 		lds r25,(iter)+1
 121 0046 2091 0000 		lds r18,count
 122 004a 3091 0000 		lds r19,(count)+1
 123 004e 880F      		lsl r24
 124 0050 991F      		rol r25
 125 0052 E091 0000 		lds r30,begin
 126 0056 F091 0000 		lds r31,(begin)+1
 127 005a E80F      		add r30,r24
 128 005c F91F      		adc r31,r25
 129 005e 3183      		std Z+1,r19
 130 0060 2083      		st Z,r18
  79:main.c        ****     count = 0;
 131               		.stabn	68,0,79,.LM4-.LFBB1
 132               	.LM4:
 133 0062 1092 0000 		sts (count)+1,__zero_reg__
 134 0066 1092 0000 		sts count,__zero_reg__
  80:main.c        ****     iter = iter + 1;
 135               		.stabn	68,0,80,.LM5-.LFBB1
 136               	.LM5:
 137 006a 8091 0000 		lds r24,iter
 138 006e 9091 0000 		lds r25,(iter)+1
 139 0072 0196      		adiw r24,1
 140 0074 9093 0000 		sts (iter)+1,r25
 141 0078 8093 0000 		sts iter,r24
 142               	.L2:
  81:main.c        ****   }
  82:main.c        ****   count = count + 1;
 143               		.stabn	68,0,82,.LM6-.LFBB1
 144               	.LM6:
 145 007c 8091 0000 		lds r24,count
 146 0080 9091 0000 		lds r25,(count)+1
GAS LISTING /tmp/ccpOlZ1u.s 			page 5


 147 0084 0196      		adiw r24,1
 148 0086 9093 0000 		sts (count)+1,r25
 149 008a 8093 0000 		sts count,r24
  83:main.c        ****   lastpulse = on;
 150               		.stabn	68,0,83,.LM7-.LFBB1
 151               	.LM7:
 152 008e 8091 0000 		lds r24,on
 153 0092 9091 0000 		lds r25,(on)+1
 154 0096 9093 0000 		sts (lastpulse)+1,r25
 155 009a 8093 0000 		sts lastpulse,r24
 156               	/* epilogue start */
  84:main.c        **** }
 157               		.stabn	68,0,84,.LM8-.LFBB1
 158               	.LM8:
 159 009e FF91      		pop r31
 160 00a0 EF91      		pop r30
 161 00a2 9F91      		pop r25
 162 00a4 8F91      		pop r24
 163 00a6 3F91      		pop r19
 164 00a8 2F91      		pop r18
 165 00aa 0F90      		pop r0
 166 00ac 0FBE      		out __SREG__,r0
 167 00ae 0F90      		pop r0
 168 00b0 1F90      		pop __zero_reg__
 169 00b2 1895      		reti
 170               		.size	__vector_1, .-__vector_1
 171               	.Lscope1:
 172               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 173               		.stabd	78,0,0
 174               		.stabs	"wait:F(0,15)",36,0,89,wait
 175               		.stabs	"time:P(0,5)",64,0,89,22
 176               	.global	wait
 177               		.type	wait, @function
 178               	wait:
 179               		.stabd	46,0,0
  85:main.c        **** 
  86:main.c        **** /************************************ WAIT ************************************\
  87:main.c        **** | A generic wait function                                                      |
  88:main.c        **** \******************************************************************************/
  89:main.c        **** void wait (unsigned long time) {
 180               		.stabn	68,0,89,.LM9-.LFBB2
 181               	.LM9:
 182               	.LFBB2:
 183               	/* prologue: function */
 184               	/* frame size = 0 */
 185               		.stabn	68,0,89,.LM10-.LFBB2
 186               	.LM10:
 187 00b4 20E0      		ldi r18,lo8(0)
 188 00b6 30E0      		ldi r19,hi8(0)
 189 00b8 40E0      		ldi r20,hlo8(0)
 190 00ba 50E0      		ldi r21,hhi8(0)
 191 00bc 00C0      		rjmp .L5
 192               	.L6:
  90:main.c        ****   long i;
  91:main.c        ****   for (i = 0; i < time; i++) {
  92:main.c        ****     asm volatile ("nop");
 193               		.stabn	68,0,92,.LM11-.LFBB2
GAS LISTING /tmp/ccpOlZ1u.s 			page 6


 194               	.LM11:
 195               	/* #APP */
 196               	 ;  92 "main.c" 1
 197 00be 0000      		nop
 198               	 ;  0 "" 2
  91:main.c        ****   for (i = 0; i < time; i++) {
 199               		.stabn	68,0,91,.LM12-.LFBB2
 200               	.LM12:
 201               	/* #NOAPP */
 202 00c0 2F5F      		subi r18,lo8(-(1))
 203 00c2 3F4F      		sbci r19,hi8(-(1))
 204 00c4 4F4F      		sbci r20,hlo8(-(1))
 205 00c6 5F4F      		sbci r21,hhi8(-(1))
 206               	.L5:
 207 00c8 2617      		cp r18,r22
 208 00ca 3707      		cpc r19,r23
 209 00cc 4807      		cpc r20,r24
 210 00ce 5907      		cpc r21,r25
 211 00d0 00F0      		brlo .L6
 212               	/* epilogue start */
  93:main.c        ****   }
  94:main.c        **** }
 213               		.stabn	68,0,94,.LM13-.LFBB2
 214               	.LM13:
 215 00d2 0895      		ret
 216               		.size	wait, .-wait
 217               		.stabs	"i:r(0,3)",64,0,90,18
 218               		.stabn	192,0,0,.LFBB2-.LFBB2
 219               		.stabn	224,0,0,.Lscope2-.LFBB2
 220               	.Lscope2:
 221               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 222               		.stabd	78,0,0
 223               		.stabs	"convertInput:F(0,1)",36,0,102,convertInput
 224               		.stabs	"array:P(0,16)=*(0,1)",64,0,102,30
 225               	.global	convertInput
 226               		.type	convertInput, @function
 227               	convertInput:
 228               		.stabd	46,0,0
  95:main.c        **** 
  96:main.c        **** /******************************* CONVERT INPUT *******************************\
  97:main.c        **** | This function converts the 45 bit input (ints representing bools) into the  |
  98:main.c        **** | decimal number represented on the card. It strips off the first 28 bits     |
  99:main.c        **** | and the last bit (the parady bit) and returns a two byte number generated   |
 100:main.c        **** | with the remaining 16 bits                                                  |
 101:main.c        **** \*****************************************************************************/
 102:main.c        **** int convertInput (int array[45]) {
 229               		.stabn	68,0,102,.LM14-.LFBB3
 230               	.LM14:
 231               	.LFBB3:
 232               	/* prologue: function */
 233               	/* frame size = 0 */
 234 00d4 FC01      		movw r30,r24
 103:main.c        ****   int result = 0;
 104:main.c        ****   if (array[28]) result += 32768;
 235               		.stabn	68,0,104,.LM15-.LFBB3
 236               	.LM15:
 237 00d6 80AD      		ldd r24,Z+56
GAS LISTING /tmp/ccpOlZ1u.s 			page 7


 238 00d8 91AD      		ldd r25,Z+57
 239 00da 892B      		or r24,r25
 240 00dc 01F0      		breq .L9
 241 00de 20E0      		ldi r18,lo8(-32768)
 242 00e0 30E8      		ldi r19,hi8(-32768)
 243 00e2 00C0      		rjmp .L10
 244               	.L9:
 245 00e4 20E0      		ldi r18,lo8(0)
 246 00e6 30E0      		ldi r19,hi8(0)
 247               	.L10:
 105:main.c        ****   if (array[29]) result += 16348;
 248               		.stabn	68,0,105,.LM16-.LFBB3
 249               	.LM16:
 250 00e8 82AD      		ldd r24,Z+58
 251 00ea 93AD      		ldd r25,Z+59
 252 00ec 892B      		or r24,r25
 253 00ee 01F0      		breq .L11
 254 00f0 2452      		subi r18,lo8(-(16348))
 255 00f2 304C      		sbci r19,hi8(-(16348))
 256               	.L11:
 106:main.c        ****   if (array[30]) result += 8192;
 257               		.stabn	68,0,106,.LM17-.LFBB3
 258               	.LM17:
 259 00f4 84AD      		ldd r24,Z+60
 260 00f6 95AD      		ldd r25,Z+61
 261 00f8 892B      		or r24,r25
 262 00fa 01F0      		breq .L12
 263 00fc 2050      		subi r18,lo8(-(8192))
 264 00fe 304E      		sbci r19,hi8(-(8192))
 265               	.L12:
 107:main.c        ****   if (array[31]) result += 4096;
 266               		.stabn	68,0,107,.LM18-.LFBB3
 267               	.LM18:
 268 0100 86AD      		ldd r24,Z+62
 269 0102 97AD      		ldd r25,Z+63
 270 0104 892B      		or r24,r25
 271 0106 01F0      		breq .L13
 272 0108 2050      		subi r18,lo8(-(4096))
 273 010a 304F      		sbci r19,hi8(-(4096))
 274               	.L13:
 108:main.c        ****   if (array[32]) result += 2048;
 275               		.stabn	68,0,108,.LM19-.LFBB3
 276               	.LM19:
 277 010c E05C      		subi r30,lo8(-(64))
 278 010e FF4F      		sbci r31,hi8(-(64))
 279 0110 8081      		ld r24,Z
 280 0112 9181      		ldd r25,Z+1
 281 0114 E054      		subi r30,lo8(-(-64))
 282 0116 F040      		sbci r31,hi8(-(-64))
 283 0118 892B      		or r24,r25
 284 011a 01F0      		breq .L14
 285 011c 2050      		subi r18,lo8(-(2048))
 286 011e 384F      		sbci r19,hi8(-(2048))
 287               	.L14:
 109:main.c        ****   if (array[33]) result += 1024;
 288               		.stabn	68,0,109,.LM20-.LFBB3
 289               	.LM20:
GAS LISTING /tmp/ccpOlZ1u.s 			page 8


 290 0120 EE5B      		subi r30,lo8(-(66))
 291 0122 FF4F      		sbci r31,hi8(-(66))
 292 0124 8081      		ld r24,Z
 293 0126 9181      		ldd r25,Z+1
 294 0128 E254      		subi r30,lo8(-(-66))
 295 012a F040      		sbci r31,hi8(-(-66))
 296 012c 892B      		or r24,r25
 297 012e 01F0      		breq .L15
 298 0130 2050      		subi r18,lo8(-(1024))
 299 0132 3C4F      		sbci r19,hi8(-(1024))
 300               	.L15:
 110:main.c        ****   if (array[34]) result += 512;
 301               		.stabn	68,0,110,.LM21-.LFBB3
 302               	.LM21:
 303 0134 EC5B      		subi r30,lo8(-(68))
 304 0136 FF4F      		sbci r31,hi8(-(68))
 305 0138 8081      		ld r24,Z
 306 013a 9181      		ldd r25,Z+1
 307 013c E454      		subi r30,lo8(-(-68))
 308 013e F040      		sbci r31,hi8(-(-68))
 309 0140 892B      		or r24,r25
 310 0142 01F0      		breq .L16
 311 0144 2050      		subi r18,lo8(-(512))
 312 0146 3E4F      		sbci r19,hi8(-(512))
 313               	.L16:
 111:main.c        ****   if (array[35]) result += 256;
 314               		.stabn	68,0,111,.LM22-.LFBB3
 315               	.LM22:
 316 0148 EA5B      		subi r30,lo8(-(70))
 317 014a FF4F      		sbci r31,hi8(-(70))
 318 014c 8081      		ld r24,Z
 319 014e 9181      		ldd r25,Z+1
 320 0150 E654      		subi r30,lo8(-(-70))
 321 0152 F040      		sbci r31,hi8(-(-70))
 322 0154 892B      		or r24,r25
 323 0156 01F0      		breq .L17
 324 0158 2050      		subi r18,lo8(-(256))
 325 015a 3F4F      		sbci r19,hi8(-(256))
 326               	.L17:
 112:main.c        ****   if (array[36]) result += 128;
 327               		.stabn	68,0,112,.LM23-.LFBB3
 328               	.LM23:
 329 015c E85B      		subi r30,lo8(-(72))
 330 015e FF4F      		sbci r31,hi8(-(72))
 331 0160 8081      		ld r24,Z
 332 0162 9181      		ldd r25,Z+1
 333 0164 E854      		subi r30,lo8(-(-72))
 334 0166 F040      		sbci r31,hi8(-(-72))
 335 0168 892B      		or r24,r25
 336 016a 01F0      		breq .L18
 337 016c 2058      		subi r18,lo8(-(128))
 338 016e 3F4F      		sbci r19,hi8(-(128))
 339               	.L18:
 113:main.c        ****   if (array[37]) result += 64;
 340               		.stabn	68,0,113,.LM24-.LFBB3
 341               	.LM24:
 342 0170 E65B      		subi r30,lo8(-(74))
GAS LISTING /tmp/ccpOlZ1u.s 			page 9


 343 0172 FF4F      		sbci r31,hi8(-(74))
 344 0174 8081      		ld r24,Z
 345 0176 9181      		ldd r25,Z+1
 346 0178 EA54      		subi r30,lo8(-(-74))
 347 017a F040      		sbci r31,hi8(-(-74))
 348 017c 892B      		or r24,r25
 349 017e 01F0      		breq .L19
 350 0180 205C      		subi r18,lo8(-(64))
 351 0182 3F4F      		sbci r19,hi8(-(64))
 352               	.L19:
 114:main.c        ****   if (array[38]) result += 32;
 353               		.stabn	68,0,114,.LM25-.LFBB3
 354               	.LM25:
 355 0184 E45B      		subi r30,lo8(-(76))
 356 0186 FF4F      		sbci r31,hi8(-(76))
 357 0188 8081      		ld r24,Z
 358 018a 9181      		ldd r25,Z+1
 359 018c EC54      		subi r30,lo8(-(-76))
 360 018e F040      		sbci r31,hi8(-(-76))
 361 0190 892B      		or r24,r25
 362 0192 01F0      		breq .L20
 363 0194 205E      		subi r18,lo8(-(32))
 364 0196 3F4F      		sbci r19,hi8(-(32))
 365               	.L20:
 115:main.c        ****   if (array[39]) result += 16;
 366               		.stabn	68,0,115,.LM26-.LFBB3
 367               	.LM26:
 368 0198 E25B      		subi r30,lo8(-(78))
 369 019a FF4F      		sbci r31,hi8(-(78))
 370 019c 8081      		ld r24,Z
 371 019e 9181      		ldd r25,Z+1
 372 01a0 EE54      		subi r30,lo8(-(-78))
 373 01a2 F040      		sbci r31,hi8(-(-78))
 374 01a4 892B      		or r24,r25
 375 01a6 01F0      		breq .L21
 376 01a8 205F      		subi r18,lo8(-(16))
 377 01aa 3F4F      		sbci r19,hi8(-(16))
 378               	.L21:
 116:main.c        ****   if (array[40]) result += 8;
 379               		.stabn	68,0,116,.LM27-.LFBB3
 380               	.LM27:
 381 01ac E05B      		subi r30,lo8(-(80))
 382 01ae FF4F      		sbci r31,hi8(-(80))
 383 01b0 8081      		ld r24,Z
 384 01b2 9181      		ldd r25,Z+1
 385 01b4 E055      		subi r30,lo8(-(-80))
 386 01b6 F040      		sbci r31,hi8(-(-80))
 387 01b8 892B      		or r24,r25
 388 01ba 01F0      		breq .L22
 389 01bc 285F      		subi r18,lo8(-(8))
 390 01be 3F4F      		sbci r19,hi8(-(8))
 391               	.L22:
 117:main.c        ****   if (array[41]) result += 4;
 392               		.stabn	68,0,117,.LM28-.LFBB3
 393               	.LM28:
 394 01c0 EE5A      		subi r30,lo8(-(82))
 395 01c2 FF4F      		sbci r31,hi8(-(82))
GAS LISTING /tmp/ccpOlZ1u.s 			page 10


 396 01c4 8081      		ld r24,Z
 397 01c6 9181      		ldd r25,Z+1
 398 01c8 E255      		subi r30,lo8(-(-82))
 399 01ca F040      		sbci r31,hi8(-(-82))
 400 01cc 892B      		or r24,r25
 401 01ce 01F0      		breq .L23
 402 01d0 2C5F      		subi r18,lo8(-(4))
 403 01d2 3F4F      		sbci r19,hi8(-(4))
 404               	.L23:
 118:main.c        ****   if (array[42]) result += 2;
 405               		.stabn	68,0,118,.LM29-.LFBB3
 406               	.LM29:
 407 01d4 EC5A      		subi r30,lo8(-(84))
 408 01d6 FF4F      		sbci r31,hi8(-(84))
 409 01d8 8081      		ld r24,Z
 410 01da 9181      		ldd r25,Z+1
 411 01dc E455      		subi r30,lo8(-(-84))
 412 01de F040      		sbci r31,hi8(-(-84))
 413 01e0 892B      		or r24,r25
 414 01e2 01F0      		breq .L24
 415 01e4 2E5F      		subi r18,lo8(-(2))
 416 01e6 3F4F      		sbci r19,hi8(-(2))
 417               	.L24:
 119:main.c        ****   if (array[43]) result += 1;
 418               		.stabn	68,0,119,.LM30-.LFBB3
 419               	.LM30:
 420 01e8 EA5A      		subi r30,lo8(-(86))
 421 01ea FF4F      		sbci r31,hi8(-(86))
 422 01ec 8081      		ld r24,Z
 423 01ee 9181      		ldd r25,Z+1
 424 01f0 892B      		or r24,r25
 425 01f2 01F0      		breq .L25
 426 01f4 2F5F      		subi r18,lo8(-(1))
 427 01f6 3F4F      		sbci r19,hi8(-(1))
 428               	.L25:
 120:main.c        ****   return result;
 121:main.c        **** }
 429               		.stabn	68,0,121,.LM31-.LFBB3
 430               	.LM31:
 431 01f8 C901      		movw r24,r18
 432               	/* epilogue start */
 433 01fa 0895      		ret
 434               		.size	convertInput, .-convertInput
 435               		.stabs	"result:r(0,1)",64,0,103,18
 436               		.stabn	192,0,0,.LFBB3-.LFBB3
 437               		.stabn	224,0,0,.Lscope3-.LFBB3
 438               	.Lscope3:
 439               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 440               		.stabd	78,0,0
 441               		.stabs	"searchTag:F(0,1)",36,0,128,searchTag
 442               		.stabs	"tag:P(0,1)",64,0,128,22
 443               	.global	searchTag
 444               		.type	searchTag, @function
 445               	searchTag:
 446               		.stabd	46,0,0
 122:main.c        **** 
 123:main.c        **** /********************************* Search Tag *********************************\
GAS LISTING /tmp/ccpOlZ1u.s 			page 11


 124:main.c        **** | This function searches for a tag in the list of tags stored in the flash     |
 125:main.c        **** | memory, if the tag is found then the function returns 1 (true) if the tag    |
 126:main.c        **** | is not found then the function returns 0 (false)                             |
 127:main.c        **** \******************************************************************************/
 128:main.c        **** int searchTag (int tag) {
 447               		.stabn	68,0,128,.LM32-.LFBB4
 448               	.LM32:
 449               	.LFBB4:
 450               	/* prologue: function */
 451               	/* frame size = 0 */
 452 01fc BC01      		movw r22,r24
 129:main.c        ****   int i;
 130:main.c        ****   for (i = 0; i < namesize; i++) {
 453               		.stabn	68,0,130,.LM33-.LFBB4
 454               	.LM33:
 455 01fe 4091 0000 		lds r20,namesize
 456 0202 5091 0000 		lds r21,(namesize)+1
 457 0206 E091 0000 		lds r30,names
 458 020a F091 0000 		lds r31,(names)+1
 459 020e 20E0      		ldi r18,lo8(0)
 460 0210 30E0      		ldi r19,hi8(0)
 461 0212 00C0      		rjmp .L28
 462               	.L31:
 131:main.c        ****     if (tag == names[i]) {
 463               		.stabn	68,0,131,.LM34-.LFBB4
 464               	.LM34:
 465 0214 8191      		ld r24,Z+
 466 0216 9191      		ld r25,Z+
 467 0218 6817      		cp r22,r24
 468 021a 7907      		cpc r23,r25
 469 021c 01F4      		brne .L29
 470 021e 21E0      		ldi r18,lo8(1)
 471 0220 30E0      		ldi r19,hi8(1)
 472 0222 00C0      		rjmp .L30
 473               	.L29:
 130:main.c        ****   for (i = 0; i < namesize; i++) {
 474               		.stabn	68,0,130,.LM35-.LFBB4
 475               	.LM35:
 476 0224 2F5F      		subi r18,lo8(-(1))
 477 0226 3F4F      		sbci r19,hi8(-(1))
 478               	.L28:
 479 0228 2417      		cp r18,r20
 480 022a 3507      		cpc r19,r21
 481 022c 04F0      		brlt .L31
 482 022e 20E0      		ldi r18,lo8(0)
 483 0230 30E0      		ldi r19,hi8(0)
 484               	.L30:
 132:main.c        ****       return 1;
 133:main.c        ****     }
 134:main.c        ****   }
 135:main.c        ****   return 0;
 136:main.c        **** }
 485               		.stabn	68,0,136,.LM36-.LFBB4
 486               	.LM36:
 487 0232 C901      		movw r24,r18
 488               	/* epilogue start */
 489 0234 0895      		ret
GAS LISTING /tmp/ccpOlZ1u.s 			page 12


 490               		.size	searchTag, .-searchTag
 491               		.stabs	"i:r(0,1)",64,0,129,18
 492               		.stabn	192,0,0,.LFBB4-.LFBB4
 493               		.stabn	224,0,0,.Lscope4-.LFBB4
 494               	.Lscope4:
 495               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 496               		.stabd	78,0,0
 497               		.stabs	"analizeInput:F(0,15)",36,0,147,analizeInput
 498               	.global	analizeInput
 499               		.type	analizeInput, @function
 500               	analizeInput:
 501               		.stabd	46,0,0
 137:main.c        **** 
 138:main.c        **** /******************************* Analize Input *******************************\
 139:main.c        **** | analizeInput(void) parses through the global variable and gets the 45 bit   |
 140:main.c        **** | id tag.                                                                     |
 141:main.c        **** | 1) Converts raw pulse per wave count (5,6,7) to binary data (0,1)           |
 142:main.c        **** | 2) Finds a start tag in the code                                            |
 143:main.c        **** | 3) Parses the data from multibit code (11111000000000000111111111100000) to |
 144:main.c        **** |     singlebit manchester code (100110) untill it finds an end tag           |
 145:main.c        **** | 4) Converts manchester code (100110) to binary code (010)                   |
 146:main.c        **** \*****************************************************************************/
 147:main.c        **** void analizeInput (void) {
 502               		.stabn	68,0,147,.LM37-.LFBB5
 503               	.LM37:
 504               	.LFBB5:
 505 0236 8F92      		push r8
 506 0238 9F92      		push r9
 507 023a AF92      		push r10
 508 023c BF92      		push r11
 509 023e CF92      		push r12
 510 0240 DF92      		push r13
 511 0242 EF92      		push r14
 512 0244 FF92      		push r15
 513 0246 0F93      		push r16
 514 0248 1F93      		push r17
 515 024a DF93      		push r29
 516 024c CF93      		push r28
 517 024e CDB7      		in r28,__SP_L__
 518 0250 DEB7      		in r29,__SP_H__
 519 0252 CE50      		subi r28,lo8(-(-270))
 520 0254 D140      		sbci r29,hi8(-(-270))
 521 0256 0FB6      		in __tmp_reg__,__SREG__
 522 0258 F894      		cli
 523 025a DEBF      		out __SP_H__,r29
 524 025c 0FBE      		out __SREG__,__tmp_reg__
 525 025e CDBF      		out __SP_L__,r28
 526               	/* prologue: function */
 527               	/* frame size = 270 */
 528               		.stabn	68,0,147,.LM38-.LFBB5
 529               	.LM38:
 530 0260 ABE5      		ldi r26,lo8(91)
 531 0262 EA2E      		mov r14,r26
 532 0264 F12C      		mov r15,__zero_reg__
 533 0266 EC0E      		add r14,r28
 534 0268 FD1E      		adc r15,r29
 535 026a F701      		movw r30,r14
GAS LISTING /tmp/ccpOlZ1u.s 			page 13


 148:main.c        ****   int i;                // Generic for loop 'i' counter
 149:main.c        ****   int inARow = 0;       // number of identical bits in a row
 150:main.c        ****   int lastVal = 0;      // value of the identical bits in a row
 151:main.c        ****   int resultArray[90];  // Parsed Bit code in manchester
 152:main.c        ****   int resultArray_index = 0;
 153:main.c        ****   int finalArray[45];   //Parsed Bit Code out of manchester
 154:main.c        ****   int finalArray_index = 0;
 155:main.c        ****   
 156:main.c        ****   // Initilize the arrays so that any errors or unchanged values show up as 2s
 157:main.c        ****   for (i = 0; i < 90; i ++) {
 158:main.c        ****     resultArray[i] = 2;
 536               		.stabn	68,0,158,.LM39-.LFBB5
 537               	.LM39:
 538 026c 22E0      		ldi r18,lo8(2)
 539 026e 30E0      		ldi r19,hi8(2)
 157:main.c        ****   for (i = 0; i < 90; i ++) {
 540               		.stabn	68,0,157,.LM40-.LFBB5
 541               	.LM40:
 542 0270 CE01      		movw r24,r28
 543 0272 815F      		subi r24,lo8(-(271))
 544 0274 9E4F      		sbci r25,hi8(-(271))
 545               	.L34:
 546               		.stabn	68,0,158,.LM41-.LFBB5
 547               	.LM41:
 548 0276 2193      		st Z+,r18
 549 0278 3193      		st Z+,r19
 157:main.c        ****   for (i = 0; i < 90; i ++) {
 550               		.stabn	68,0,157,.LM42-.LFBB5
 551               	.LM42:
 552 027a E817      		cp r30,r24
 553 027c F907      		cpc r31,r25
 554 027e 01F4      		brne .L34
 555 0280 5E01      		movw r10,r28
 556 0282 0894      		sec
 557 0284 A11C      		adc r10,__zero_reg__
 558 0286 B11C      		adc r11,__zero_reg__
 559 0288 F501      		movw r30,r10
 159:main.c        ****   }
 160:main.c        ****   for (i = 0; i < 45; i++) {
 161:main.c        ****     finalArray[i] = 2;
 560               		.stabn	68,0,161,.LM43-.LFBB5
 561               	.LM43:
 562 028a 22E0      		ldi r18,lo8(2)
 563 028c 30E0      		ldi r19,hi8(2)
 160:main.c        ****   for (i = 0; i < 45; i++) {
 564               		.stabn	68,0,160,.LM44-.LFBB5
 565               	.LM44:
 566 028e CE01      		movw r24,r28
 567 0290 855A      		subi r24,lo8(-(91))
 568 0292 9F4F      		sbci r25,hi8(-(91))
 569               	.L35:
 570               		.stabn	68,0,161,.LM45-.LFBB5
 571               	.LM45:
 572 0294 2193      		st Z+,r18
 573 0296 3193      		st Z+,r19
 160:main.c        ****   for (i = 0; i < 45; i++) {
 574               		.stabn	68,0,160,.LM46-.LFBB5
GAS LISTING /tmp/ccpOlZ1u.s 			page 14


 575               	.LM46:
 576 0298 E817      		cp r30,r24
 577 029a F907      		cpc r31,r25
 578 029c 01F4      		brne .L35
 162:main.c        ****   }
 163:main.c        ****   
 164:main.c        ****   //------------------------------------------
 165:main.c        ****   // Convert raw data to binary
 166:main.c        ****   //------------------------------------------
 167:main.c        ****   for (i = 1; i < ARRAYSIZE; i++) {
 168:main.c        ****     if (begin[i] == 5) {
 579               		.stabn	68,0,168,.LM47-.LFBB5
 580               	.LM47:
 581 029e C090 0000 		lds r12,begin
 582 02a2 D090 0000 		lds r13,(begin)+1
 583 02a6 A601      		movw r20,r12
 584 02a8 F601      		movw r30,r12
 585 02aa 21E0      		ldi r18,lo8(1)
 586 02ac 30E0      		ldi r19,hi8(1)
 169:main.c        ****       begin[i] = 0;
 170:main.c        ****     }
 171:main.c        ****     else if (begin[i] == 7) {
 172:main.c        ****       begin[i] = 1;
 173:main.c        ****     }
 174:main.c        ****     else if (begin[i] == 6) {
 175:main.c        ****        begin[i] = begin[i-1];
 176:main.c        ****     }
 177:main.c        ****     else {
 178:main.c        ****       begin[i] = -2;
 587               		.stabn	68,0,178,.LM48-.LFBB5
 588               	.LM48:
 589 02ae AEEF      		ldi r26,lo8(-2)
 590 02b0 BFEF      		ldi r27,hi8(-2)
 172:main.c        ****       begin[i] = 1;
 591               		.stabn	68,0,172,.LM49-.LFBB5
 592               	.LM49:
 593 02b2 61E0      		ldi r22,lo8(1)
 594 02b4 70E0      		ldi r23,hi8(1)
 595               	.L40:
 168:main.c        ****     if (begin[i] == 5) {
 596               		.stabn	68,0,168,.LM50-.LFBB5
 597               	.LM50:
 598 02b6 8281      		ldd r24,Z+2
 599 02b8 9381      		ldd r25,Z+3
 600 02ba 8530      		cpi r24,5
 601 02bc 9105      		cpc r25,__zero_reg__
 602 02be 01F4      		brne .L36
 169:main.c        ****       begin[i] = 0;
 603               		.stabn	68,0,169,.LM51-.LFBB5
 604               	.LM51:
 605 02c0 1382      		std Z+3,__zero_reg__
 606 02c2 1282      		std Z+2,__zero_reg__
 607 02c4 00C0      		rjmp .L37
 608               	.L36:
 171:main.c        ****     else if (begin[i] == 7) {
 609               		.stabn	68,0,171,.LM52-.LFBB5
 610               	.LM52:
GAS LISTING /tmp/ccpOlZ1u.s 			page 15


 611 02c6 8730      		cpi r24,7
 612 02c8 9105      		cpc r25,__zero_reg__
 613 02ca 01F4      		brne .L38
 172:main.c        ****       begin[i] = 1;
 614               		.stabn	68,0,172,.LM53-.LFBB5
 615               	.LM53:
 616 02cc 7383      		std Z+3,r23
 617 02ce 6283      		std Z+2,r22
 618 02d0 00C0      		rjmp .L37
 619               	.L38:
 174:main.c        ****     else if (begin[i] == 6) {
 620               		.stabn	68,0,174,.LM54-.LFBB5
 621               	.LM54:
 622 02d2 0697      		sbiw r24,6
 623 02d4 01F4      		brne .L39
 175:main.c        ****        begin[i] = begin[i-1];
 624               		.stabn	68,0,175,.LM55-.LFBB5
 625               	.LM55:
 626 02d6 8081      		ld r24,Z
 627 02d8 9181      		ldd r25,Z+1
 628 02da 9383      		std Z+3,r25
 629 02dc 8283      		std Z+2,r24
 630 02de 00C0      		rjmp .L37
 631               	.L39:
 632               		.stabn	68,0,178,.LM56-.LFBB5
 633               	.LM56:
 634 02e0 B383      		std Z+3,r27
 635 02e2 A283      		std Z+2,r26
 636               	.L37:
 167:main.c        ****   for (i = 1; i < ARRAYSIZE; i++) {
 637               		.stabn	68,0,167,.LM57-.LFBB5
 638               	.LM57:
 639 02e4 2F5F      		subi r18,lo8(-(1))
 640 02e6 3F4F      		sbci r19,hi8(-(1))
 641 02e8 3296      		adiw r30,2
 642 02ea 83E0      		ldi r24,hi8(900)
 643 02ec 2438      		cpi r18,lo8(900)
 644 02ee 3807      		cpc r19,r24
 645 02f0 01F4      		brne .L40
 646 02f2 A0E0      		ldi r26,lo8(0)
 647 02f4 B0E0      		ldi r27,hi8(0)
 648 02f6 20E0      		ldi r18,lo8(0)
 649 02f8 30E0      		ldi r19,hi8(0)
 650 02fa 80E0      		ldi r24,lo8(0)
 651 02fc 90E0      		ldi r25,hi8(0)
 652               	.L46:
 179:main.c        ****     }
 180:main.c        ****   }
 181:main.c        ****     
 182:main.c        ****   //------------------------------------------
 183:main.c        ****   // Find Start Label
 184:main.c        ****   //------------------------------------------
 185:main.c        ****   for (i = 0; i < ARRAYSIZE; i++) {
 186:main.c        ****     if (begin [i] == lastVal) {
 653               		.stabn	68,0,186,.LM58-.LFBB5
 654               	.LM58:
 655 02fe FA01      		movw r30,r20
GAS LISTING /tmp/ccpOlZ1u.s 			page 16


 656 0300 6081      		ld r22,Z
 657 0302 7181      		ldd r23,Z+1
 658 0304 6817      		cp r22,r24
 659 0306 7907      		cpc r23,r25
 660 0308 01F4      		brne .L41
 187:main.c        ****       inARow++;
 661               		.stabn	68,0,187,.LM59-.LFBB5
 662               	.LM59:
 663 030a 2F5F      		subi r18,lo8(-(1))
 664 030c 3F4F      		sbci r19,hi8(-(1))
 665 030e 00C0      		rjmp .L42
 666               	.L41:
 188:main.c        ****     }
 189:main.c        ****     else {
 190:main.c        ****       // End of the group of bits with the same value
 191:main.c        ****       if (inARow >= 15 && lastVal == 1) {
 667               		.stabn	68,0,191,.LM60-.LFBB5
 668               	.LM60:
 669 0310 2F30      		cpi r18,15
 670 0312 3105      		cpc r19,__zero_reg__
 671 0314 04F0      		brlt .L43
 672 0316 0197      		sbiw r24,1
 673 0318 01F0      		breq .L44
 674               	.L43:
 192:main.c        ****         // Start tag found
 193:main.c        ****         break;
 675               		.stabn	68,0,193,.LM61-.LFBB5
 676               	.LM61:
 677 031a 21E0      		ldi r18,lo8(1)
 678 031c 30E0      		ldi r19,hi8(1)
 679               	.L42:
 185:main.c        ****   for (i = 0; i < ARRAYSIZE; i++) {
 680               		.stabn	68,0,185,.LM62-.LFBB5
 681               	.LM62:
 682 031e 1196      		adiw r26,1
 683 0320 4E5F      		subi r20,lo8(-(2))
 684 0322 5F4F      		sbci r21,hi8(-(2))
 685 0324 F3E0      		ldi r31,hi8(900)
 686 0326 A438      		cpi r26,lo8(900)
 687 0328 BF07      		cpc r27,r31
 688 032a 01F0      		breq .L45
 689 032c CB01      		movw r24,r22
 690 032e 00C0      		rjmp .L46
 691               	.L44:
 692 0330 61E0      		ldi r22,lo8(1)
 693 0332 70E0      		ldi r23,hi8(1)
 694               	.L45:
 194:main.c        ****       }
 195:main.c        ****       // group of bits was not a start tag, search next tag
 196:main.c        ****       inARow = 1;
 197:main.c        ****       lastVal = begin[i];
 198:main.c        ****     }
 199:main.c        ****   }
 200:main.c        ****   int start = i;
 201:main.c        ****   PORTB |= 0x10;
 695               		.stabn	68,0,201,.LM63-.LFBB5
 696               	.LM63:
GAS LISTING /tmp/ccpOlZ1u.s 			page 17


 697 0334 2C9A      		sbi 37-32,4
 698 0336 8D01      		movw r16,r26
 699 0338 000F      		lsl r16
 700 033a 111F      		rol r17
 701 033c 0C0D      		add r16,r12
 702 033e 1D1D      		adc r17,r13
 703 0340 40E0      		ldi r20,lo8(0)
 704 0342 50E0      		ldi r21,hi8(0)
 202:main.c        ****   
 203:main.c        ****   //------------------------------------------
 204:main.c        ****   // PARSE TO BIT DATA
 205:main.c        ****   //------------------------------------------
 206:main.c        ****   for (;i < ARRAYSIZE; i++) {
 207:main.c        ****     if (begin [i] == lastVal) {
 208:main.c        ****       inARow++;
 209:main.c        ****     }
 210:main.c        ****     else {
 211:main.c        ****       // End of the group of bits with the same value
 212:main.c        ****       if (inARow >= 4 && inARow <= 8) {
 213:main.c        ****         // there are between 4 and 8 bits of the same value in a row
 214:main.c        ****         // Add one bit to the resulting array
 215:main.c        ****         resultArray[resultArray_index] = lastVal;
 216:main.c        ****         resultArray_index += 1;
 217:main.c        ****       }
 218:main.c        ****       else if (inARow >= 9 && inARow <= 14) {
 219:main.c        ****         // there are between 9 and 14 bits of the same value in a row
 220:main.c        ****         // Add two bits to the resulting array
 221:main.c        ****         resultArray[resultArray_index] = lastVal;
 705               		.stabn	68,0,221,.LM64-.LFBB5
 706               	.LM64:
 707 0344 EBE5      		ldi r30,lo8(91)
 708 0346 CE2E      		mov r12,r30
 709 0348 D12C      		mov r13,__zero_reg__
 710 034a CC0E      		add r12,r28
 711 034c DD1E      		adc r13,r29
 712 034e 00C0      		rjmp .L47
 713               	.L54:
 207:main.c        ****     if (begin [i] == lastVal) {
 714               		.stabn	68,0,207,.LM65-.LFBB5
 715               	.LM65:
 716 0350 F801      		movw r30,r16
 717 0352 8080      		ld r8,Z
 718 0354 9180      		ldd r9,Z+1
 719 0356 8616      		cp r8,r22
 720 0358 9706      		cpc r9,r23
 721 035a 01F4      		brne .L48
 208:main.c        ****       inARow++;
 722               		.stabn	68,0,208,.LM66-.LFBB5
 723               	.LM66:
 724 035c 2F5F      		subi r18,lo8(-(1))
 725 035e 3F4F      		sbci r19,hi8(-(1))
 726 0360 00C0      		rjmp .L49
 727               	.L48:
 212:main.c        ****       if (inARow >= 4 && inARow <= 8) {
 728               		.stabn	68,0,212,.LM67-.LFBB5
 729               	.LM67:
 730 0362 C901      		movw r24,r18
GAS LISTING /tmp/ccpOlZ1u.s 			page 18


 731 0364 0497      		sbiw r24,4
 732 0366 0597      		sbiw r24,5
 733 0368 00F0      		brlo .L77
 734               	.L50:
 218:main.c        ****       else if (inARow >= 9 && inARow <= 14) {
 735               		.stabn	68,0,218,.LM68-.LFBB5
 736               	.LM68:
 737 036a C901      		movw r24,r18
 738 036c 0997      		sbiw r24,9
 739 036e 0697      		sbiw r24,6
 740 0370 00F4      		brsh .L52
 741               		.stabn	68,0,221,.LM69-.LFBB5
 742               	.LM69:
 743 0372 FA01      		movw r30,r20
 744 0374 EE0F      		lsl r30
 745 0376 FF1F      		rol r31
 746 0378 EC0D      		add r30,r12
 747 037a FD1D      		adc r31,r13
 748 037c 7183      		std Z+1,r23
 749 037e 6083      		st Z,r22
 222:main.c        ****         resultArray[resultArray_index+1] = lastVal;
 750               		.stabn	68,0,222,.LM70-.LFBB5
 751               	.LM70:
 752 0380 4F5F      		subi r20,lo8(-(1))
 753 0382 5F4F      		sbci r21,hi8(-(1))
 754               	.L77:
 755 0384 FA01      		movw r30,r20
 756 0386 EE0F      		lsl r30
 757 0388 FF1F      		rol r31
 758 038a EC0D      		add r30,r12
 759 038c FD1D      		adc r31,r13
 760 038e 7183      		std Z+1,r23
 761 0390 6083      		st Z,r22
 223:main.c        ****         resultArray_index += 2;
 762               		.stabn	68,0,223,.LM71-.LFBB5
 763               	.LM71:
 764 0392 4F5F      		subi r20,lo8(-(1))
 765 0394 5F4F      		sbci r21,hi8(-(1))
 766 0396 00C0      		rjmp .L51
 767               	.L52:
 224:main.c        ****       }
 225:main.c        ****       else if (inARow >= 15 && lastVal == 0) {
 768               		.stabn	68,0,225,.LM72-.LFBB5
 769               	.LM72:
 770 0398 2F30      		cpi r18,15
 771 039a 3105      		cpc r19,__zero_reg__
 772 039c 04F0      		brlt .L51
 773 039e 672B      		or r22,r23
 774 03a0 01F0      		breq .L53
 775               	.L51:
 226:main.c        ****         // there are more then 15 identical bits in a row, and they are 0s
 227:main.c        ****         // this is an end tag
 228:main.c        ****         break;
 776               		.stabn	68,0,228,.LM73-.LFBB5
 777               	.LM73:
 778 03a2 21E0      		ldi r18,lo8(1)
 779 03a4 30E0      		ldi r19,hi8(1)
GAS LISTING /tmp/ccpOlZ1u.s 			page 19


 780               	.L49:
 206:main.c        ****   for (;i < ARRAYSIZE; i++) {
 781               		.stabn	68,0,206,.LM74-.LFBB5
 782               	.LM74:
 783 03a6 1196      		adiw r26,1
 784 03a8 0E5F      		subi r16,lo8(-(2))
 785 03aa 1F4F      		sbci r17,hi8(-(2))
 786 03ac B401      		movw r22,r8
 787               	.L47:
 788 03ae F3E0      		ldi r31,hi8(900)
 789 03b0 A438      		cpi r26,lo8(900)
 790 03b2 BF07      		cpc r27,r31
 791 03b4 04F0      		brlt .L54
 792               	.L53:
 793 03b6 F701      		movw r30,r14
 147:main.c        **** void analizeInput (void) {
 794               		.stabn	68,0,147,.LM75-.LFBB5
 795               	.LM75:
 796 03b8 AE01      		movw r20,r28
 797 03ba 455F      		subi r20,lo8(-(267))
 798 03bc 5E4F      		sbci r21,hi8(-(267))
 799               	.L56:
 229:main.c        ****       }
 230:main.c        ****       // group of bits was not the end tag, continue parsing data
 231:main.c        ****       inARow = 1;
 232:main.c        ****       lastVal = begin[i];
 233:main.c        ****       if (resultArray_index >= 90) {
 234:main.c        ****         //return;
 235:main.c        ****       }
 236:main.c        ****     }
 237:main.c        ****   }
 238:main.c        ****   
 239:main.c        ****   // Error checking
 240:main.c        ****   for (i = 0; i < 88; i++) { // ignore the parody bit ([88] and [89])
 241:main.c        ****     if (resultArray[i] == 2) {
 800               		.stabn	68,0,241,.LM76-.LFBB5
 801               	.LM76:
 802 03be 8081      		ld r24,Z
 803 03c0 9181      		ldd r25,Z+1
 804 03c2 0297      		sbiw r24,2
 805 03c4 01F4      		brne .+2
 806 03c6 00C0      		rjmp .L68
 242:main.c        ****       return;
 807               		.stabn	68,0,242,.LM77-.LFBB5
 808               	.LM77:
 809 03c8 3296      		adiw r30,2
 240:main.c        ****   for (i = 0; i < 88; i++) { // ignore the parody bit ([88] and [89])
 810               		.stabn	68,0,240,.LM78-.LFBB5
 811               	.LM78:
 812 03ca E417      		cp r30,r20
 813 03cc F507      		cpc r31,r21
 814 03ce 01F4      		brne .L56
 815               	.L69:
 243:main.c        ****     }
 244:main.c        ****   }
 245:main.c        ****   
 246:main.c        ****   //------------------------------------------
GAS LISTING /tmp/ccpOlZ1u.s 			page 20


 247:main.c        ****   // MANCHESTER DECODING
 248:main.c        ****   //------------------------------------------
 249:main.c        ****   for (i = 0; i < 88; i+=2) { // ignore the parody bit ([88][89])
 250:main.c        ****     if (resultArray[i] == 1 && resultArray[i+1] == 0) {
 816               		.stabn	68,0,250,.LM79-.LFBB5
 817               	.LM79:
 818 03d0 F701      		movw r30,r14
 819 03d2 2081      		ld r18,Z
 820 03d4 3181      		ldd r19,Z+1
 821 03d6 2130      		cpi r18,1
 822 03d8 3105      		cpc r19,__zero_reg__
 823 03da 01F4      		brne .L57
 824 03dc 8281      		ldd r24,Z+2
 825 03de 9381      		ldd r25,Z+3
 826 03e0 892B      		or r24,r25
 827 03e2 01F0      		breq .+2
 828 03e4 00C0      		rjmp .L68
 251:main.c        ****       finalArray[finalArray_index] = 1;
 829               		.stabn	68,0,251,.LM80-.LFBB5
 830               	.LM80:
 831 03e6 F501      		movw r30,r10
 832 03e8 3183      		std Z+1,r19
 833 03ea 2083      		st Z,r18
 834 03ec 00C0      		rjmp .L58
 835               	.L57:
 252:main.c        ****     }
 253:main.c        ****     else if (resultArray[i] == 0 && resultArray[i+1] == 1) {
 836               		.stabn	68,0,253,.LM81-.LFBB5
 837               	.LM81:
 838 03ee 232B      		or r18,r19
 839 03f0 01F0      		breq .+2
 840 03f2 00C0      		rjmp .L68
 841 03f4 F701      		movw r30,r14
 842 03f6 8281      		ldd r24,Z+2
 843 03f8 9381      		ldd r25,Z+3
 844 03fa 0197      		sbiw r24,1
 845 03fc 01F0      		breq .+2
 846 03fe 00C0      		rjmp .L68
 254:main.c        ****       finalArray[finalArray_index] = 0;
 847               		.stabn	68,0,254,.LM82-.LFBB5
 848               	.LM82:
 849 0400 F501      		movw r30,r10
 850 0402 1182      		std Z+1,__zero_reg__
 851 0404 1082      		st Z,__zero_reg__
 852               	.L58:
 853 0406 84E0      		ldi r24,lo8(4)
 854 0408 90E0      		ldi r25,hi8(4)
 855 040a E80E      		add r14,r24
 856 040c F91E      		adc r15,r25
 857 040e E2E0      		ldi r30,lo8(2)
 858 0410 F0E0      		ldi r31,hi8(2)
 859 0412 AE0E      		add r10,r30
 860 0414 BF1E      		adc r11,r31
 249:main.c        ****   for (i = 0; i < 88; i+=2) { // ignore the parody bit ([88][89])
 861               		.stabn	68,0,249,.LM83-.LFBB5
 862               	.LM83:
 863 0416 E416      		cp r14,r20
GAS LISTING /tmp/ccpOlZ1u.s 			page 21


 864 0418 F506      		cpc r15,r21
 865 041a 01F4      		brne .L69
 255:main.c        ****     }
 256:main.c        ****     else {
 257:main.c        ****       // The read code is not in manchester, ignore this read tag and try again
 258:main.c        ****       // free the allocated memory and end the function
 259:main.c        ****       return;
 260:main.c        ****     }
 261:main.c        ****     finalArray_index++;
 262:main.c        ****   }
 263:main.c        ****   
 264:main.c        ****   
 265:main.c        ****   //------------------------------------------
 266:main.c        ****   // SERVO MECHANICS
 267:main.c        ****   //------------------------------------------
 268:main.c        ****   if (searchTag(convertInput (finalArray))){
 866               		.stabn	68,0,268,.LM84-.LFBB5
 867               	.LM84:
 868 041c CE01      		movw r24,r28
 869 041e 0196      		adiw r24,1
 870 0420 0E94 0000 		call convertInput
 871 0424 0E94 0000 		call searchTag
 872 0428 892B      		or r24,r25
 873 042a 01F0      		breq .L60
 269:main.c        ****     PORTB |= 0x04; // Green Light
 874               		.stabn	68,0,269,.LM85-.LFBB5
 875               	.LM85:
 876 042c 2A9A      		sbi 37-32,2
 270:main.c        ****     
 271:main.c        ****     // open the door
 272:main.c        ****     OCR1A = 10000 - SERVO_OPEN;
 877               		.stabn	68,0,272,.LM86-.LFBB5
 878               	.LM86:
 879 042e 81ED      		ldi r24,lo8(9425)
 880 0430 94E2      		ldi r25,hi8(9425)
 881 0432 9093 8900 		sts (136)+1,r25
 882 0436 8093 8800 		sts 136,r24
 883 043a 80E0      		ldi r24,lo8(0)
 884 043c 90E0      		ldi r25,hi8(0)
 885 043e A0E0      		ldi r26,hlo8(0)
 886 0440 B0E0      		ldi r27,hhi8(0)
 887               	.L62:
 888               	.LBB8:
 273:main.c        ****     {
 274:main.c        ****       unsigned long i;
 275:main.c        ****       for (i = 0; i < 2500000; i++) {
 276:main.c        ****         if (!((PINB & (1<<7))>>7)) {
 889               		.stabn	68,0,276,.LM87-.LFBB5
 890               	.LM87:
 891 0442 1F9B      		sbis 35-32,7
 892 0444 00C0      		rjmp .L61
 275:main.c        ****       for (i = 0; i < 2500000; i++) {
 893               		.stabn	68,0,275,.LM88-.LFBB5
 894               	.LM88:
 895 0446 0196      		adiw r24,1
 896 0448 A11D      		adc r26,__zero_reg__
 897 044a B11D      		adc r27,__zero_reg__
GAS LISTING /tmp/ccpOlZ1u.s 			page 22


 898 044c 803A      		cpi r24,lo8(2500000)
 899 044e F5E2      		ldi r31,hi8(2500000)
 900 0450 9F07      		cpc r25,r31
 901 0452 F6E2      		ldi r31,hlo8(2500000)
 902 0454 AF07      		cpc r26,r31
 903 0456 F0E0      		ldi r31,hhi8(2500000)
 904 0458 BF07      		cpc r27,r31
 905 045a 01F4      		brne .L62
 906               	.L61:
 907               	.LBE8:
 277:main.c        ****           break;
 278:main.c        ****         }
 279:main.c        ****       }
 280:main.c        ****     }
 281:main.c        ****     //close the door
 282:main.c        ****     OCR1A = 10000 - SERVO_CLOSE;
 908               		.stabn	68,0,282,.LM89-.LFBB5
 909               	.LM89:
 910 045c 88E2      		ldi r24,lo8(9000)
 911 045e 93E2      		ldi r25,hi8(9000)
 912 0460 9093 8900 		sts (136)+1,r25
 913 0464 8093 8800 		sts 136,r24
 914 0468 80E0      		ldi r24,lo8(0)
 915 046a 90E0      		ldi r25,hi8(0)
 916 046c A0E0      		ldi r26,hlo8(0)
 917 046e B0E0      		ldi r27,hhi8(0)
 918               	.L63:
 919               	.LBB9:
 283:main.c        ****     {
 284:main.c        ****       unsigned long i;
 285:main.c        ****       for (i = 0; i < 500000; i++) {
 286:main.c        ****         asm volatile ("nop");
 920               		.stabn	68,0,286,.LM90-.LFBB5
 921               	.LM90:
 922               	/* #APP */
 923               	 ;  286 "main.c" 1
 924 0470 0000      		nop
 925               	 ;  0 "" 2
 285:main.c        ****       for (i = 0; i < 500000; i++) {
 926               		.stabn	68,0,285,.LM91-.LFBB5
 927               	.LM91:
 928               	/* #NOAPP */
 929 0472 0196      		adiw r24,1
 930 0474 A11D      		adc r26,__zero_reg__
 931 0476 B11D      		adc r27,__zero_reg__
 932 0478 8032      		cpi r24,lo8(500000)
 933 047a 21EA      		ldi r18,hi8(500000)
 934 047c 9207      		cpc r25,r18
 935 047e 27E0      		ldi r18,hlo8(500000)
 936 0480 A207      		cpc r26,r18
 937 0482 20E0      		ldi r18,hhi8(500000)
 938 0484 B207      		cpc r27,r18
 939 0486 01F4      		brne .L63
 940               	.LBE9:
 287:main.c        ****       }
 288:main.c        ****     }
 289:main.c        ****     OCR1A = 0;
GAS LISTING /tmp/ccpOlZ1u.s 			page 23


 941               		.stabn	68,0,289,.LM92-.LFBB5
 942               	.LM92:
 943 0488 1092 8900 		sts (136)+1,__zero_reg__
 944 048c 1092 8800 		sts 136,__zero_reg__
 945 0490 80E0      		ldi r24,lo8(0)
 946 0492 90E0      		ldi r25,hi8(0)
 947 0494 00C0      		rjmp .L64
 948               	.L65:
 949               	.LBB10:
 950               	.LBB11:
  92:main.c        ****     asm volatile ("nop");
 951               		.stabn	68,0,92,.LM93-.LFBB5
 952               	.LM93:
 953               	/* #APP */
 954               	 ;  92 "main.c" 1
 955 0496 0000      		nop
 956               	 ;  0 "" 2
 957               	/* #NOAPP */
 958               	.L64:
 959 0498 0196      		adiw r24,1
  91:main.c        ****   for (i = 0; i < time; i++) {
 960               		.stabn	68,0,91,.LM94-.LFBB5
 961               	.LM94:
 962 049a E3E1      		ldi r30,hi8(5001)
 963 049c 8938      		cpi r24,lo8(5001)
 964 049e 9E07      		cpc r25,r30
 965 04a0 01F4      		brne .L65
 966 04a2 00C0      		rjmp .L68
 967               	.L60:
 968               	.LBE11:
 969               	.LBE10:
 290:main.c        ****     wait (5000);
 291:main.c        ****   }
 292:main.c        ****   else {
 293:main.c        ****     PORTB |= 0x08;//Red Light
 970               		.stabn	68,0,293,.LM95-.LFBB5
 971               	.LM95:
 972 04a4 2B9A      		sbi 37-32,3
 973 04a6 80E0      		ldi r24,lo8(0)
 974 04a8 90E0      		ldi r25,hi8(0)
 975 04aa 00C0      		rjmp .L66
 976               	.L67:
 977               	.LBB12:
 978               	.LBB13:
  92:main.c        ****     asm volatile ("nop");
 979               		.stabn	68,0,92,.LM96-.LFBB5
 980               	.LM96:
 981               	/* #APP */
 982               	 ;  92 "main.c" 1
 983 04ac 0000      		nop
 984               	 ;  0 "" 2
 985               	/* #NOAPP */
 986               	.L66:
 987 04ae 0196      		adiw r24,1
  91:main.c        ****   for (i = 0; i < time; i++) {
 988               		.stabn	68,0,91,.LM97-.LFBB5
 989               	.LM97:
GAS LISTING /tmp/ccpOlZ1u.s 			page 24


 990 04b0 F3E1      		ldi r31,hi8(5001)
 991 04b2 8938      		cpi r24,lo8(5001)
 992 04b4 9F07      		cpc r25,r31
 993 04b6 01F4      		brne .L67
 994               	.L68:
 995               	/* epilogue start */
 996               	.LBE13:
 997               	.LBE12:
 294:main.c        ****     wait (5000);
 295:main.c        ****   }
 296:main.c        **** }
 998               		.stabn	68,0,296,.LM98-.LFBB5
 999               	.LM98:
 1000 04b8 C25F      		subi r28,lo8(-(270))
 1001 04ba DE4F      		sbci r29,hi8(-(270))
 1002 04bc 0FB6      		in __tmp_reg__,__SREG__
 1003 04be F894      		cli
 1004 04c0 DEBF      		out __SP_H__,r29
 1005 04c2 0FBE      		out __SREG__,__tmp_reg__
 1006 04c4 CDBF      		out __SP_L__,r28
 1007 04c6 CF91      		pop r28
 1008 04c8 DF91      		pop r29
 1009 04ca 1F91      		pop r17
 1010 04cc 0F91      		pop r16
 1011 04ce FF90      		pop r15
 1012 04d0 EF90      		pop r14
 1013 04d2 DF90      		pop r13
 1014 04d4 CF90      		pop r12
 1015 04d6 BF90      		pop r11
 1016 04d8 AF90      		pop r10
 1017 04da 9F90      		pop r9
 1018 04dc 8F90      		pop r8
 1019 04de 0895      		ret
 1020               		.size	analizeInput, .-analizeInput
 1021               		.stabs	"i:r(0,1)",64,0,148,26
 1022               		.stabs	"inARow:r(0,1)",64,0,149,18
 1023               		.stabs	"lastVal:r(0,1)",64,0,150,22
 1024               		.stabs	"resultArray:(0,17)=ar(0,18)=r(0,18);0;0177777;;0;89;(0,1)",128,0,151,91
 1025               		.stabs	"resultArray_index:r(0,1)",64,0,152,20
 1026               		.stabs	"finalArray:(0,19)=ar(0,18);0;44;(0,1)",128,0,153,1
 1027               		.stabn	192,0,0,.LFBB5-.LFBB5
 1028               		.stabs	"i:r(0,5)",64,0,274,24
 1029               		.stabn	192,0,0,.LBB8-.LFBB5
 1030               		.stabn	224,0,0,.LBE8-.LFBB5
 1031               		.stabs	"i:r(0,5)",64,0,284,24
 1032               		.stabn	192,0,0,.LBB9-.LFBB5
 1033               		.stabn	224,0,0,.LBE9-.LFBB5
 1034               		.stabn	224,0,0,.Lscope5-.LFBB5
 1035               	.Lscope5:
 1036               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 1037               		.stabd	78,0,0
 1038               		.stabs	"addNames:F(0,15)",36,0,56,addNames
 1039               	.global	addNames
 1040               		.type	addNames, @function
 1041               	addNames:
 1042               		.stabd	46,0,0
  56:main.c        **** void addNames(void) {
GAS LISTING /tmp/ccpOlZ1u.s 			page 25


 1043               		.stabn	68,0,56,.LM99-.LFBB6
 1044               	.LM99:
 1045               	.LFBB6:
 1046               	/* prologue: function */
 1047               	/* frame size = 0 */
  57:main.c        ****   namesize = 2; // number of IDs in the access list
 1048               		.stabn	68,0,57,.LM100-.LFBB6
 1049               	.LM100:
 1050 04e0 82E0      		ldi r24,lo8(2)
 1051 04e2 90E0      		ldi r25,hi8(2)
 1052 04e4 9093 0000 		sts (namesize)+1,r25
 1053 04e8 8093 0000 		sts namesize,r24
  58:main.c        ****   names = malloc (sizeof(int) * namesize);
 1054               		.stabn	68,0,58,.LM101-.LFBB6
 1055               	.LM101:
 1056 04ec 84E0      		ldi r24,lo8(4)
 1057 04ee 90E0      		ldi r25,hi8(4)
 1058 04f0 0E94 0000 		call malloc
 1059 04f4 FC01      		movw r30,r24
 1060 04f6 9093 0000 		sts (names)+1,r25
 1061 04fa 8093 0000 		sts names,r24
  60:main.c        ****   names [0] = 12345;
 1062               		.stabn	68,0,60,.LM102-.LFBB6
 1063               	.LM102:
 1064 04fe 89E3      		ldi r24,lo8(12345)
 1065 0500 90E3      		ldi r25,hi8(12345)
 1066 0502 9183      		std Z+1,r25
 1067 0504 8083      		st Z,r24
  61:main.c        ****   names [1] = 67890;
 1068               		.stabn	68,0,61,.LM103-.LFBB6
 1069               	.LM103:
 1070 0506 82E3      		ldi r24,lo8(2354)
 1071 0508 99E0      		ldi r25,hi8(2354)
 1072 050a 9383      		std Z+3,r25
 1073 050c 8283      		std Z+2,r24
 1074               	/* epilogue start */
  62:main.c        **** }
 1075               		.stabn	68,0,62,.LM104-.LFBB6
 1076               	.LM104:
 1077 050e 0895      		ret
 1078               		.size	addNames, .-addNames
 1079               	.Lscope6:
 1080               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 1081               		.stabd	78,0,0
 1082               		.stabs	"main:F(0,1)",36,0,303,main
 1083               	.global	main
 1084               		.type	main, @function
 1085               	main:
 1086               		.stabd	46,0,0
 297:main.c        **** 
 298:main.c        **** 
 299:main.c        **** /******************************* MAIN FUNCTION *******************************\
 300:main.c        **** | This is the main function, it initilized the variabls and then waits for    |
 301:main.c        **** | interrupt to fill the buffer before analizing the gathered data             |
 302:main.c        **** \*****************************************************************************/
 303:main.c        **** int main (void) {
 1087               		.stabn	68,0,303,.LM105-.LFBB7
GAS LISTING /tmp/ccpOlZ1u.s 			page 26


 1088               	.LM105:
 1089               	.LFBB7:
 1090               	/* prologue: function */
 1091               	/* frame size = 0 */
 304:main.c        ****   int i = 0;
 305:main.c        **** 
 306:main.c        ****   //------------------------------------------
 307:main.c        ****   // INITLILIZATION
 308:main.c        ****   //------------------------------------------
 309:main.c        **** 
 310:main.c        ****   // Load the list of valid ID tags
 311:main.c        ****   addNames(); 
 1092               		.stabn	68,0,311,.LM106-.LFBB7
 1093               	.LM106:
 1094 0510 0E94 0000 		call addNames
 312:main.c        ****   
 313:main.c        ****   //==========> PIN INITILIZATION <==========//
 314:main.c        ****   DDRD = 0x00; // 00000000 configure output on port D
 1095               		.stabn	68,0,314,.LM107-.LFBB7
 1096               	.LM107:
 1097 0514 1AB8      		out 42-32,__zero_reg__
 315:main.c        ****   DDRB = 0x1E; // 00011100 configure output on port B
 1098               		.stabn	68,0,315,.LM108-.LFBB7
 1099               	.LM108:
 1100 0516 8EE1      		ldi r24,lo8(30)
 1101 0518 84B9      		out 36-32,r24
 316:main.c        ****   
 317:main.c        ****   //=========> SERVO INITILIZATION <=========//
 318:main.c        ****   ICR1 = 10000;// TOP count for the PWM TIMER
 1102               		.stabn	68,0,318,.LM109-.LFBB7
 1103               	.LM109:
 1104 051a 80E1      		ldi r24,lo8(10000)
 1105 051c 97E2      		ldi r25,hi8(10000)
 1106 051e 9093 8700 		sts (134)+1,r25
 1107 0522 8093 8600 		sts 134,r24
 319:main.c        ****   
 320:main.c        ****   // Set timer on match, clear on TOP
 321:main.c        ****   TCCR1A  = ((1 << COM1A1) | (1 << COM1A0));
 1108               		.stabn	68,0,321,.LM110-.LFBB7
 1109               	.LM110:
 1110 0526 80EC      		ldi r24,lo8(-64)
 1111 0528 8093 8000 		sts 128,r24
 322:main.c        ****   TCCR1B  = ((1 << CS11) | (1 << WGM13));
 1112               		.stabn	68,0,322,.LM111-.LFBB7
 1113               	.LM111:
 1114 052c 82E1      		ldi r24,lo8(18)
 1115 052e 8093 8100 		sts 129,r24
 323:main.c        ****   
 324:main.c        ****   // Move the servo to close Position
 325:main.c        ****   OCR1A = 10000 - SERVO_CLOSE;
 1116               		.stabn	68,0,325,.LM112-.LFBB7
 1117               	.LM112:
 1118 0532 88E2      		ldi r24,lo8(9000)
 1119 0534 93E2      		ldi r25,hi8(9000)
 1120 0536 9093 8900 		sts (136)+1,r25
 1121 053a 8093 8800 		sts 136,r24
 1122 053e 80E0      		ldi r24,lo8(0)
GAS LISTING /tmp/ccpOlZ1u.s 			page 27


 1123 0540 90E0      		ldi r25,hi8(0)
 1124 0542 A0E0      		ldi r26,hlo8(0)
 1125 0544 B0E0      		ldi r27,hhi8(0)
 1126               	.L81:
 1127               	.LBB14:
 326:main.c        ****   {
 327:main.c        ****     unsigned long j;
 328:main.c        ****     for (j = 0; j < 500000; j++) {
 329:main.c        ****       asm volatile ("nop");
 1128               		.stabn	68,0,329,.LM113-.LFBB7
 1129               	.LM113:
 1130               	/* #APP */
 1131               	 ;  329 "main.c" 1
 1132 0546 0000      		nop
 1133               	 ;  0 "" 2
 328:main.c        ****     for (j = 0; j < 500000; j++) {
 1134               		.stabn	68,0,328,.LM114-.LFBB7
 1135               	.LM114:
 1136               	/* #NOAPP */
 1137 0548 0196      		adiw r24,1
 1138 054a A11D      		adc r26,__zero_reg__
 1139 054c B11D      		adc r27,__zero_reg__
 1140 054e 8032      		cpi r24,lo8(500000)
 1141 0550 21EA      		ldi r18,hi8(500000)
 1142 0552 9207      		cpc r25,r18
 1143 0554 27E0      		ldi r18,hlo8(500000)
 1144 0556 A207      		cpc r26,r18
 1145 0558 20E0      		ldi r18,hhi8(500000)
 1146 055a B207      		cpc r27,r18
 1147 055c 01F4      		brne .L81
 1148               	.LBE14:
 330:main.c        ****     }
 331:main.c        ****   }
 332:main.c        ****   // Set servo to idle
 333:main.c        ****   OCR1A = 0;
 1149               		.stabn	68,0,333,.LM115-.LFBB7
 1150               	.LM115:
 1151 055e 1092 8900 		sts (136)+1,__zero_reg__
 1152 0562 1092 8800 		sts 136,__zero_reg__
 334:main.c        ****   
 335:main.c        ****   //========> VARIABLE INITILIZATION <=======//
 336:main.c        ****   count = 0;
 1153               		.stabn	68,0,336,.LM116-.LFBB7
 1154               	.LM116:
 1155 0566 1092 0000 		sts (count)+1,__zero_reg__
 1156 056a 1092 0000 		sts count,__zero_reg__
 337:main.c        ****   begin = malloc (sizeof(char)*ARRAYSIZE);
 1157               		.stabn	68,0,337,.LM117-.LFBB7
 1158               	.LM117:
 1159 056e 84E8      		ldi r24,lo8(900)
 1160 0570 93E0      		ldi r25,hi8(900)
 1161 0572 0E94 0000 		call malloc
 1162 0576 9C01      		movw r18,r24
 1163 0578 8093 0000 		sts begin,r24
 1164 057c 3093 0000 		sts begin+1,r19
 338:main.c        ****   iter = 0;
 1165               		.stabn	68,0,338,.LM118-.LFBB7
GAS LISTING /tmp/ccpOlZ1u.s 			page 28


 1166               	.LM118:
 1167 0580 1092 0000 		sts (iter)+1,__zero_reg__
 1168 0584 1092 0000 		sts iter,__zero_reg__
 1169 0588 FC01      		movw r30,r24
 339:main.c        ****   for (i = 0; i < ARRAYSIZE; i ++) {
 1170               		.stabn	68,0,339,.LM119-.LFBB7
 1171               	.LM119:
 1172 058a 885F      		subi r24,lo8(-(1800))
 1173 058c 984F      		sbci r25,hi8(-(1800))
 1174               	.L82:
 340:main.c        ****     begin[i] = 0;
 1175               		.stabn	68,0,340,.LM120-.LFBB7
 1176               	.LM120:
 1177 058e 1192      		st Z+,__zero_reg__
 1178 0590 1192      		st Z+,__zero_reg__
 339:main.c        ****   for (i = 0; i < ARRAYSIZE; i ++) {
 1179               		.stabn	68,0,339,.LM121-.LFBB7
 1180               	.LM121:
 1181 0592 E817      		cp r30,r24
 1182 0594 F907      		cpc r31,r25
 1183 0596 01F4      		brne .L82
 341:main.c        ****   }
 342:main.c        ****   
 343:main.c        ****   //=======> INTERRUPT INITILAIZATION <======//
 344:main.c        ****   sei ();       // enable global interrupts
 1184               		.stabn	68,0,344,.LM122-.LFBB7
 1185               	.LM122:
 1186               	/* #APP */
 1187               	 ;  344 "main.c" 1
 1188 0598 7894      		sei
 1189               	 ;  0 "" 2
 345:main.c        ****   EICRA = 0x03; // configure interupt INT0
 1190               		.stabn	68,0,345,.LM123-.LFBB7
 1191               	.LM123:
 1192               	/* #NOAPP */
 1193 059a 83E0      		ldi r24,lo8(3)
 1194 059c 8093 6900 		sts 105,r24
 346:main.c        ****   EIMSK = 0x01; // enabe interrupt INT0
 1195               		.stabn	68,0,346,.LM124-.LFBB7
 1196               	.LM124:
 1197 05a0 81E0      		ldi r24,lo8(1)
 1198 05a2 8DBB      		out 61-32,r24
 1199               	.L85:
 347:main.c        ****   
 348:main.c        ****   //------------------------------------------
 349:main.c        ****   // MAIN LOOP
 350:main.c        ****   //------------------------------------------
 351:main.c        ****   while (1) {
 352:main.c        ****     //enable interrupts
 353:main.c        ****     sei();
 1200               		.stabn	68,0,353,.LM125-.LFBB7
 1201               	.LM125:
 1202               	/* #APP */
 1203               	 ;  353 "main.c" 1
 1204 05a4 7894      		sei
 1205               	 ;  0 "" 2
 1206               	/* #NOAPP */
GAS LISTING /tmp/ccpOlZ1u.s 			page 29


 1207               	.L83:
 354:main.c        ****     
 355:main.c        ****     // while the card is being read
 356:main.c        ****     while (1) {
 357:main.c        ****       // if the buffer is full
 358:main.c        ****       if (iter >= ARRAYSIZE) {
 1208               		.stabn	68,0,358,.LM126-.LFBB7
 1209               	.LM126:
 1210 05a6 8091 0000 		lds r24,iter
 1211 05aa 9091 0000 		lds r25,(iter)+1
 1212 05ae 8458      		subi r24,lo8(900)
 1213 05b0 9340      		sbci r25,hi8(900)
 1214 05b2 04F0      		brlt .L83
 359:main.c        ****         cli(); // disable interrupts
 1215               		.stabn	68,0,359,.LM127-.LFBB7
 1216               	.LM127:
 1217               	/* #APP */
 1218               	 ;  359 "main.c" 1
 1219 05b4 F894      		cli
 1220               	 ;  0 "" 2
 360:main.c        ****         break; // continue to analize the buffer
 361:main.c        ****       }
 362:main.c        ****     }  
 363:main.c        ****     
 364:main.c        ****     PORTB &= ~0x1C;
 1221               		.stabn	68,0,364,.LM128-.LFBB7
 1222               	.LM128:
 1223               	/* #NOAPP */
 1224 05b6 85B1      		in r24,37-32
 1225 05b8 837E      		andi r24,lo8(-29)
 1226 05ba 85B9      		out 37-32,r24
 365:main.c        ****     
 366:main.c        ****     //analize the array of input
 367:main.c        ****     analizeInput ();
 1227               		.stabn	68,0,367,.LM129-.LFBB7
 1228               	.LM129:
 1229 05bc 0E94 0000 		call analizeInput
 368:main.c        ****     
 369:main.c        ****     //reset the saved values to prevent errors when reading another card
 370:main.c        ****     count = 0;
 1230               		.stabn	68,0,370,.LM130-.LFBB7
 1231               	.LM130:
 1232 05c0 1092 0000 		sts (count)+1,__zero_reg__
 1233 05c4 1092 0000 		sts count,__zero_reg__
 371:main.c        ****     iter = 0;
 1234               		.stabn	68,0,371,.LM131-.LFBB7
 1235               	.LM131:
 1236 05c8 1092 0000 		sts (iter)+1,__zero_reg__
 1237 05cc 1092 0000 		sts iter,__zero_reg__
 372:main.c        ****     for (i = 0; i < ARRAYSIZE; i ++) {
 373:main.c        ****       begin[i] = 0;
 1238               		.stabn	68,0,373,.LM132-.LFBB7
 1239               	.LM132:
 1240 05d0 2091 0000 		lds r18,begin
 1241 05d4 3091 0000 		lds r19,(begin)+1
 1242 05d8 80E0      		ldi r24,lo8(0)
 1243 05da 90E0      		ldi r25,hi8(0)
GAS LISTING /tmp/ccpOlZ1u.s 			page 30


 1244               	.L84:
 1245 05dc F901      		movw r30,r18
 1246 05de E80F      		add r30,r24
 1247 05e0 F91F      		adc r31,r25
 1248 05e2 1182      		std Z+1,__zero_reg__
 1249 05e4 1082      		st Z,__zero_reg__
 1250 05e6 0296      		adiw r24,2
 372:main.c        ****     for (i = 0; i < ARRAYSIZE; i ++) {
 1251               		.stabn	68,0,372,.LM133-.LFBB7
 1252               	.LM133:
 1253 05e8 47E0      		ldi r20,hi8(1800)
 1254 05ea 8830      		cpi r24,lo8(1800)
 1255 05ec 9407      		cpc r25,r20
 1256 05ee 01F4      		brne .L84
 1257 05f0 00C0      		rjmp .L85
 1258               		.size	main, .-main
 1259               		.stabs	"j:r(0,5)",64,0,327,24
 1260               		.stabn	192,0,0,.LBB14-.LFBB7
 1261               		.stabn	224,0,0,.LBE14-.LFBB7
 1262               	.Lscope7:
 1263               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 1264               		.stabd	78,0,0
 1265               		.comm begin,2,1
 1266               		.comm names,2,1
 1267               		.comm namesize,2,1
 1268               		.comm iter,2,1
 1269               		.comm count,2,1
 1270               		.comm lastpulse,2,1
 1271               		.comm on,2,1
 1272               		.stabs	"begin:G(0,16)",32,0,43,0
 1273               		.stabs	"names:G(0,16)",32,0,44,0
 1274               		.stabs	"namesize:G(0,1)",32,0,45,0
 1275               		.stabs	"iter:G(0,20)=B(0,1)",32,0,46,0
 1276               		.stabs	"count:G(0,20)",32,0,47,0
 1277               		.stabs	"lastpulse:G(0,20)",32,0,48,0
 1278               		.stabs	"on:G(0,20)",32,0,49,0
 1279               		.stabs	"",100,0,0,.Letext0
 1280               	.Letext0:
 1281               	.global __do_clear_bss
GAS LISTING /tmp/ccpOlZ1u.s 			page 31


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccpOlZ1u.s:2      *ABS*:000000000000003f __SREG__
     /tmp/ccpOlZ1u.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/ccpOlZ1u.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/ccpOlZ1u.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/ccpOlZ1u.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccpOlZ1u.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccpOlZ1u.s:81     .text:0000000000000000 __vector_1
                            *COM*:0000000000000002 on
                            *COM*:0000000000000002 lastpulse
                            *COM*:0000000000000002 iter
                            *COM*:0000000000000002 count
                            *COM*:0000000000000002 begin
     /tmp/ccpOlZ1u.s:178    .text:00000000000000b4 wait
     /tmp/ccpOlZ1u.s:227    .text:00000000000000d4 convertInput
     /tmp/ccpOlZ1u.s:445    .text:00000000000001fc searchTag
                            *COM*:0000000000000002 namesize
                            *COM*:0000000000000002 names
     /tmp/ccpOlZ1u.s:500    .text:0000000000000236 analizeInput
     /tmp/ccpOlZ1u.s:1041   .text:00000000000004e0 addNames
     /tmp/ccpOlZ1u.s:1085   .text:0000000000000510 main

UNDEFINED SYMBOLS
malloc
__do_clear_bss
